loading word2vec embeddings...
2018-05-23 11:52:57,855: features: INFO: loading nltk english stop words...
2018-05-23 11:52:57,863: features: INFO: set([u'all', u'just', u'being', u'over', u'both', u'through', u'yourselves', u'its', u'before', u'o', u'hadn', u'herself', u'll', u'had', u'should', u'to', u'only', u'won', u'under', u'ours', u'has', u'do', u'them', u'his', u'very', u'they', u'not', u'during', u'now', u'him', u'nor', u'd', u'did', u'didn', u'this', u'she', u'each', u'further', u'where', u'few', u'because', u'doing', u'some', u'hasn', u'are', u'our', u'ourselves', u'out', u'what', u'for', u'while', u're', u'does', u'above', u'between', u'mustn', u't', u'be', u'we', u'who', u'were', u'here', u'shouldn', u'hers', u'by', u'on', u'about', u'couldn', u'of', u'against', u's', u'isn', u'or', u'own', u'into', u'yourself', u'down', u'mightn', u'wasn', u'your', u'from', u'her', u'their', u'aren', u'there', u'been', u'whom', u'too', u'wouldn', u'themselves', u'weren', u'was', u'until', u'more', u'himself', u'that', u'but', u'don', u'with', u'than', u'those', u'he', u'me', u'myself', u'ma', u'these', u'up', u'will', u'below', u'ain', u'can', u'theirs', u'my', u'and', u've', u'then', u'is', u'am', u'it', u'doesn', u'an', u'as', u'itself', u'at', u'have', u'in', u'any', u'if', u'again', u'no', u'when', u'same', u'how', u'other', u'which', u'you', u'shan', u'needn', u'haven', u'after', u'most', u'such', u'why', u'a', u'off', u'i', u'm', u'yours', u'so', u'y', u'the', u'having', u'once'])
2018-05-23 11:52:57,863: features: INFO: 
2018-05-23 11:52:57,977: extract_amt_for_q_ranker: INFO: using ALL features: ['ArticleLength', 'AverageWordEmbedding_Article', 'AverageWordEmbedding_Candidate', 'AverageWordEmbedding_LastK', 'AverageWordEmbedding_User', 'AverageWordEmbedding_kUser', 'BigramOverlap', 'CandidateLength', 'ConfusionWords', 'DialogActCandidate', 'DialogActLastUser', 'DialogLength', 'EntityOverlap', 'GenericTurns', 'IntensifierWords', 'LastUserLength', 'Negation', 'NonStopWordOverlap', 'ProfanityWords', 'SentimentScoreCandidate', 'SentimentScoreLastUser', 'Similarity_CandidateArticle', 'Similarity_CandidateArticle_noStop', 'Similarity_CandidateKUser', 'Similarity_CandidateKUser_noStop', 'Similarity_CandidateLastK', 'Similarity_CandidateLastK_noStop', 'Similarity_CandidateUser', 'TrigramOverlap', 'WhWords']
2018-05-23 11:52:58,226: __main__: INFO: 
2018-05-23 11:52:58,226: __main__: INFO: Namespace(gpu=0, model_prefix='models/q_estimator/SmallQ/Small_Q-Network[exp42]_1526971319.59', verbose=False)
2018-05-23 11:52:58,227: __main__: INFO: 
2018-05-23 11:52:58,243: __main__: INFO: old parameters: {u'sentence_hs': 300, u'verbose': False, u'article_bidir': False, u'utterance_hs': 300, u'update_frequence': 2000, u'article_hs': 300, u'epochs': 100000, u'patience': 20, u'mlp_dropout': 0.4, u'context_dropout': 0.2, u'utterance_dropout': 0.2, u'fix_embeddings': False, u'data_f': u'./data/q_ranker_amt_data_1524939554.0.json', u'experiment': None, u'sentence_bidir': False, u'gpu': 0, u'article_dropout': 0.2, u'optimizer': u'sgd', u'learning_rate': 0.0001, u'use_custom_encs': True, u'batch_size': 128, u'sentence_dropout': 0.2, u'context_hs': 300, u'predict_rewards': False, u'rnn_gate': u'gru', u'mlp_activation': u'prelu', u'utterance_bidir': False, u'model_name': u'SmallQ/Small_Q-Network[exp42]', u'vocab_f': u'./data/q_ranker_amt_vocab_1524939554.0.pkl', u'mode': u'mlp', u'debug': False, u'context_bidir': False, u'gamma': 0.99}
2018-05-23 11:52:58,244: __main__: INFO: 
2018-05-23 11:52:58,244: __main__: INFO: Loading data from ./data/q_ranker_amt_data_1524939554.0.pkl...
2018-05-23 11:53:22,501: __main__: INFO: got 7083 test examples
2018-05-23 11:53:22,501: __main__: INFO: 
2018-05-23 11:53:22,501: __main__: INFO: Loading vocabulary...
2018-05-23 11:53:22,537: __main__: INFO: number of unique tokens: 24448
2018-05-23 11:53:22,537: __main__: INFO: 
2018-05-23 11:53:22,537: __main__: INFO: Get data loaders...
2018-05-23 11:53:22,574: __main__: INFO: done.
2018-05-23 11:53:22,574: __main__: INFO: 
2018-05-23 11:53:22,574: __main__: INFO: Building word embeddings...
2018-05-23 11:53:22,675: __main__: INFO: Got 16787/24448 = 0.686641 pretrained embeddings
2018-05-23 11:53:22,675: __main__: INFO: 
2018-05-23 11:53:22,675: __main__: INFO: Building Q-Network...
2018-05-23 11:53:25,139: __main__: INFO: QNetwork(
(fc_1): Linear(in_features=1579, out_features=789, bias=True)
(fc_2): Linear(in_features=789, out_features=789, bias=True)
(fc_3): Linear(in_features=789, out_features=394, bias=True)
(fc_4): Linear(in_features=394, out_features=1, bias=True)
(dropout): Dropout(p=0.4)
)
2018-05-23 11:53:25,139: __main__: INFO: 
2018-05-23 11:53:25,139: __main__: INFO: cuda available! Moving variables to cuda 0...
2018-05-23 11:53:25,142: __main__: INFO: 
2018-05-23 11:53:25,142: __main__: INFO: Plotting timings...
2018-05-23 11:53:25,244: __main__: INFO: best valid loss: 0.0377533 achieved at epoch 8
2018-05-23 11:53:25,244: __main__: INFO: training loss at this epoch: 0.0431384
2018-05-23 11:53:25,245: __main__: INFO: done.
2018-05-23 11:53:25,245: __main__: INFO: 
2018-05-23 11:53:25,245: __main__: INFO: Testing model in batches...
2018-05-23 11:53:40,143: __main__: INFO: Test loss: 0.0405369
2018-05-23 11:53:40,143: __main__: INFO: Finished testing. Time elapsed: 14.8987 seconds
2018-05-23 11:53:40,143: __main__: INFO: 
2018-05-23 11:53:40,143: __main__: INFO: Testing model one example at a time & generating report.json
2018-05-23 11:53:56,835: __main__: INFO: Finished 1-by-1 testing. Time elapsed: 16.6914 seconds
2018-05-23 11:53:56,835: __main__: INFO: 
2018-05-23 11:53:56,835: __main__: INFO: Saving report...
2018-05-23 11:53:57,009: __main__: INFO: done.
2018-05-23 11:53:57,009: __main__: INFO: 
2018-05-23 11:53:57,009: __main__: INFO: Measuring recall at predicting best candidate...
2018-05-23 11:53:57,034: __main__: INFO: Predicted like human behavior:
2018-05-23 11:53:57,034: __main__: INFO: - recall@1: 232 / 1028 = 0.225681
2018-05-23 11:53:57,034: __main__: INFO: - recall@2: 402 / 1028 = 0.391051
2018-05-23 11:53:57,034: __main__: INFO: - recall@3: 510 / 1028 = 0.496109
2018-05-23 11:53:57,034: __main__: INFO: - recall@4: 619 / 1028 = 0.60214
2018-05-23 11:53:57,034: __main__: INFO: - recall@5: 728 / 1028 = 0.708171
2018-05-23 11:53:57,034: __main__: INFO: - recall@6: 849 / 1028 = 0.825875
2018-05-23 11:53:57,034: __main__: INFO: - recall@7: 921 / 1028 = 0.895914
2018-05-23 11:53:57,035: __main__: INFO: - recall@8: 1027 / 1028 = 0.999027
2018-05-23 11:53:57,035: __main__: INFO: - recall@9: 1028 / 1028 = 1
2018-05-23 11:53:57,112: __main__: INFO: 
2018-05-23 11:53:57,112: __main__: INFO: Counting number of candidate responses & context lengths...
2018-05-23 11:53:57,113: __main__: INFO: Number of candidate responses:
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 1 candidates available: 0 / 1028 = 0
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 2 candidates available: 177 / 1028 = 0.172179
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 3 candidates available: 0 / 1028 = 0
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 4 candidates available: 0 / 1028 = 0
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 5 candidates available: 3 / 1028 = 0.00291829
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 6 candidates available: 3 / 1028 = 0.00291829
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 7 candidates available: 66 / 1028 = 0.0642023
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 8 candidates available: 777 / 1028 = 0.755837
2018-05-23 11:53:57,113: __main__: INFO: - #of examples with 9 candidates available: 2 / 1028 = 0.00194553
2018-05-23 11:53:57,113: __main__: INFO: Average number of candidates: 6.89008
2018-05-23 11:53:57,196: __main__: INFO: 
2018-05-23 11:53:57,196: __main__: INFO: Length of context:
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 1 messages in context: 177 / 1028 = 0.172179
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 2 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 3 messages in context: 177 / 1028 = 0.172179
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 4 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 5 messages in context: 177 / 1028 = 0.172179
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 6 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 7 messages in context: 177 / 1028 = 0.172179
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 8 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 9 messages in context: 177 / 1028 = 0.172179
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 10 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 11 messages in context: 75 / 1028 = 0.0729572
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 12 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 13 messages in context: 28 / 1028 = 0.0272374
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 14 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 15 messages in context: 17 / 1028 = 0.016537
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 16 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 17 messages in context: 12 / 1028 = 0.0116732
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 18 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,196: __main__: INFO: - #of examples with 19 messages in context: 7 / 1028 = 0.00680934
2018-05-23 11:53:57,197: __main__: INFO: - #of examples with 20 messages in context: 0 / 1028 = 0
2018-05-23 11:53:57,197: __main__: INFO: - #of examples with more messages in context: 4 / 1028 = 0.00389105
2018-05-23 11:53:57,197: __main__: INFO: Average context size: 6.12062
2018-05-23 11:53:57,307: __main__: INFO: done.
